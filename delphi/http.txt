procedure TfrmTools.getRequest();
  var
   IdHttp : TIdHTTP;
   Url : string;//请求地址
   ResponseStream : TStringStream; //返回信息
   ResponseStr : string;
  begin
   //创建IDHTTP控件
   IdHttp := TIdHTTP.Create(nil);
   //TStringStream对象用于保存响应信息
   ResponseStream := TStringStream.Create('');
   try
     //请求地址
     Url := 'http://dict.youdao.com/';
     try
       IdHttp.Get(Url,ResponseStream);
     except
       on e : Exception do
       begin
         ShowMessage(e.Message);
       end;
     end;
     //获取网页返回的信息
     ResponseStr := ResponseStream.DataString;
     //网页中的存在中文时，需要进行UTF8解码
     ResponseStr := UTF8Decode(ResponseStr);
   finally
     IdHttp.Free;
     ResponseStream.Free;
   end;
  end;

procedure TfrmTools.PostReqeust(Url : string; param: TJsonObject; ResponseStream : TMemoryStream);
var
  IdHttp : TIdHTTP;
  ResponseStr ,key,value: string;
  RequestList : TStringList;     //请求信息
  RequestStream : TStringStream;
  i: integer;
begin
  //创建IDHTTP控件
  IdHttp := TIdHTTP.Create(nil);
  //TStringStream对象用于保存响应信息
  ResponseStream := TStringStream.Create('');

  RequestStream := TStringStream.Create('');
  RequestList := TStringList.Create;
  try
    try
      //以列表的方式提交参数
      for i := 0 to param.Size - 1 do
      begin
        key := TJSONPair(param.Get(i)).JsonString.ToString;
        value := param.GetValue(key).ToString;
        RequestList.Add(key + '=' + value);
      end;
      IdHttp.Post(Url,RequestList,ResponseStream);

      //以流的方式提交参数
      //RequestStream.WriteString('text=love');
      //IdHttp.Post(Url,RequestStream,ResponseStream);
    except
      on e : Exception do
      begin
        ShowMessage(e.Message);
      end;
    end;
    //获取网页返回的信息
    //ResponseStr := ResponseStream.DataString;
    //网页中的存在中文时，需要进行UTF8解码
    //ResponseStr := UTF8Decode(ResponseStr);
  finally
    IdHttp.Free;
    RequestList.Free;
    RequestStream.Free;
    ResponseStream.Free;
  end;
end;

procedure TwordOperateFrame.debugLog(log:string);
var
  F: TextFile;
  filePath:string;
begin
  filePath := ExtractFileDir(ParamStr(0)) + '\logs\debug' + FormatDateTime('yyyy-mm-dd',Now()) + '.log';
  if(not DirectoryExists(ExtractFilePath(filePath))) then
  begin
    ForceDirectories(ExtractFilePath(filePath));
  end;
  AssignFile(F, filePath);
  if(not FileExists(filePath)) then
  begin
    rewrite(F);
  end else begin
    Append(F);  //打开准备追加
  end;
  Writeln(F, FormatDateTime('yyyy-mm-dd hh:nn:ss',Now()));
  Writeln(F, log);
  CloseFile(F);
end;