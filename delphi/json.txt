dataJson := TJSONObject.ParseJSONValue(TEncoding.UTF8.GetBytes(jsonDataStr), 0) as TJSONObject;
dataJson.GetValue('shenheyijian').ToString;
for i := 0 to json.Size - 1 do
begin
  tempStr := StringReplace(TJSONPair(json.Get(i)).JsonString.ToString, '"', '', [rfReplaceAll]) ;
  jsonArr := TJSONArray(json.GetValue(tempStr)) as TJSONArray;
  if((jsonArr <> nil) and (jsonArr.Size > 0)) then begin
    wordOperate.debugLog(tempStr + '-------' + jsonArr.tostring());
    for j := 0 to jsonArr.size - 1 do
      begin
      jsonTemp := jsonArr.Get(j) as TJSONObject;
      // 文件路径
      if(jsonTemp.GetValue('shitiid') <> nil)then
      begin      
        shitiid := StringReplace(jsonTemp.GetValue('shitiid').ToString(), '"', '',[rfReplaceAll]);
      end;
    end;
  end;
end


jsonShenHe.AddPair('shenheyijianlist', jsonArr);



function TprocFrame.fnStr2Base64ForUtf8(theStr:string):string ;
var base64 : TIdEncoderMIME;
    tmpBytes : TBytes;
begin
  base64 := TIdEncoderMIME.Create(nil);
  try
    base64.FillChar := '=';
    tmpBytes := TEncoding.UTF8.GetBytes(theStr);
    Result := base64.EncodeBytes(TIdBytes(tmpBytes));
  finally
    base64.Free;
  end;
end;

function TprocFrame.fnBase642StrForUtf8(theStr : string) : string;  //base64 解码
var base64 : TIdDeCoderMIME;
    tmpBytes : TBytes;
begin
  base64 := TIdDecoderMIME.Create(nil);
  try
    base64.FillChar := '=';
    tmpBytes := TBytes(base64.DecodeBytes(theStr));
    Result := TEncoding.UTF8.GetString(tmpBytes);
  finally
    base64.Free;
  end;
end;